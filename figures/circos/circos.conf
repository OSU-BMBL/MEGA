# 1.1 MINIMUM CIRCOS CONFIGURATION 
#
# This is a 'hello world' Circos tutorial. 
#
# Only required configuration elements are included.
#
# Subsequent tutorials in this section build on this example to
# generate a representative image with common elements found in Circos
# figures in the literature.

# Chromosome name, size and color definition
#karyotype = mega.txt
karyotype = mega_data.txt

# The <ideogram> block defines the position, size, labels and other
# properties of the segments on which data are drawn. These segments
# are usually chromosomes, but can be any integer axis.
chromosomes_display_default = no
chromosomes                 = /[c,s].*$/
#chromosomes_reverse         = /c[234]/
#chromosomes_scale           = c1=0.5r,/c[234]/=0.5rn
chromosomes_radius          = /s[1-9].*/:0.93r,/c[1-9].*/=0.93r
chromosomes_color   = /s[1-9].*/:white
<ideogram>

<spacing>

default = 0.006r

</spacing>

radius           = 0.98r
thickness        = 20p

fill             = yes  
stroke_color     = white
stroke_thickness = 1p   

show_label       = yes
# see etc/fonts.conf for list of font names
label_font       = bold 
label_radius     = dims(image,radius) - 60p
label_size       = 40
label_parallel   = yes
<rules>

<rule>
condition     = eval(var(chr) =~ "s.*") 
show_label     = false
</rule>
</rules>
</ideogram>

########### TICKS
show_ticks          = yes
show_tick_labels          = yes
<ticks>

radius           = 1r
color            = black
thickness        = 2p

# the tick label is derived by multiplying the tick position
# by 'multiplier' and casting it in 'format':
#
# sprintf(format,position*multiplier)

multiplier       = 1

# %d   - integer
# %f   - float
# %.1f - float with one decimal
# %.2f - float with two decimals
#
# for other formats, see http://perldoc.perl.org/functions/sprintf.html

format           = %d

<tick>
spacing        = 5u
size           = 10p
</tick>

<tick>
spacing        = 10u
size           = 15p
show_label     = yes
label_size     = 20p
label_offset   = 10p
format         = %d
</tick>

</ticks>

<image>
# Included from Circos distribution.
<<include etc/image.conf>>                
</image>


### Plots ###
<plots> 
<plot>
type  = text
file  = mega_label.txt

# Like with other tracks, text is limited to a radial range by setting
# r0 and r1.
#
# Individual labels can be repositioned automatically with in a
# position window to fit more labels, without overlap. This is an
# advanced feature - see the 2D Track text tutorials.

r1    = 1.5r
r0    = 0.7r

# For a list of fonts, see etc/fonts.conf in the Circos distribution.

label_font = normal
label_size = 28p

# padding  - text margin in angular direction
# rpadding - text margin in radial direction

rpadding   = 20p

show_links     = no
link_dims      = 0p,2p,5p,2p,2p
link_thickness = 2p
link_color     = black_a5

<rules>

# Text can be tested with var(value).

</rules>

</plot>

</plots>

### COLORS ###
<colors>
species1=white
chrom1=rgb(210,0,26)
chrom2=rgb(102,191,191)
chrom3=rgb(135,88,255)
chrom4=rgb(94,230,235)
chrom5=rgb(125,206,19)
chrom6=rgb(88,0,255)
chrom7=rgb(243,151,152)
chrom8=rgb(54,126,24)
chrom9=rgb(254,213,173)
chrom10=rgb(95,208,104)
chrom11=rgb(255,178,0)
chrom12=rgb(250,47,181)
</colors>

<links>

<link>

file          = mega_link.txt
radius1        = 1r 
radius2        = 0.7r 
bezier_radius = 0r
color         = black_a5
thickness     = 4
ribbon = yes
flat   = no

<rules>
<rule>
condition     = from(c1)
color         = rgb(210,0,26,0.618)
#thickness     = eval(var(thickness)*2)
#z             = 5
#crest         = 2
bezier_radius = 0.382r
</rule>

<rule>
condition     = from(c2)
color         = rgb(102,191,191,0.618)
bezier_radius = 0.382r
</rule>

<rule>
condition     = from(c3)
color         = rgb(135,88,255,0.618)
bezier_radius = 0.382r
</rule>
<rule>
condition     = from(c4)
color         = rgb(94,230,235,0.618)
bezier_radius = 0.382r
</rule>
<rule>
condition     = from(c5)
color         = rgb(125,206,19,0.618)
bezier_radius = 0.382r
</rule>
<rule>
condition     = from(c6)
color         = rgb(88,0,255,0.618)
bezier_radius = 0.382r
</rule>
<rule>
condition     = from(c7)
color         = rgb(243,151,152,0.618)
bezier_radius = 0.382r
</rule>
<rule>
condition     = from(c8)
color         = rgb(54,126,24,0.618)
bezier_radius = 0.382r
</rule>
<rule>
condition     = from(c9)
color         = rgb(254,213,173,0.618)
bezier_radius = 0.382r
</rule>
<rule>
condition     = from(c10)
color         = rgb(95,208,104,0.618)
bezier_radius = 0.382r
</rule>
<rule>
condition     = from(c11)
color         = rgb(255,178,0,0.618)
bezier_radius = 0.382r
</rule>
<rule>
condition     = from(c12)
color         = rgb(250,47,181,0.618)
bezier_radius = 0.382r
</rule>

</rules>

</link>

</links>

<<include etc/colors_fonts_patterns.conf>> 

<<include etc/housekeeping.conf>> 
<image>
 # override angle_offset defined in etc/image.conf 
 angle_offset* = 70
 <<include etc/image.conf>>
</image>